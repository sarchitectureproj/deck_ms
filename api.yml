#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for decks
  description: Express.js + MongoDB
  license:
    name: Software Architecture 2019-I
host: 192.168.99.106:4005

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /decks:
    post:
      summary: Creates a new deck
      operationId: createDeck
      parameters:
        - name: deck
          in: body
          required: true
          description: Deck Object
          schema:
            $ref: '#/definitions/DeckInput'
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all decks
      operationId: getAlldecks
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/DeckList'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /decks/{code}:
    get:
      summary: Returns a deck with the given code
      operationId: getDeckByCode
      parameters:
        - name: code
          in: path
          description: The code of the string to be returned
          required: true
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/SingleDeck'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a deck with the given code
      operationId: updateDeck
      parameters:
        - name: code
          in: path
          description: The code of the deck to be updated
          required: true
          type: string
        - name: deck
          in: body
          required: true
          description: Deck Object
          schema:
            $ref: '#/definitions/DeckInput'
      responses:
        '200':
          description: ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a deck with the given code
      operationId: deleteDeck
      parameters:
        - name: code
          in: path
          description: The code of the deck to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /cabins:
    post:
      summary: Creates a new cabin
      operationId: createCabin
      parameters:
        - name: cabin
          in: body
          required: true
          description: Cabin Object
          schema:
            $ref: '#/definitions/CabinInput'
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all cabins
      operationId: getAllCabins
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CabinList'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /cabins/{code}:
    get:
      summary: Returns a cabin with the given code
      operationId: getCabinByCode
      parameters:
        - name: code
          in: path
          description: The code of the cabin to be returned
          required: true
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/SingleCabin'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a cabin with the given code
      operationId: updateCabin
      parameters:
        - name: code
          in: path
          description: The code of the cabin to be updated
          required: true
          type: string
        - name: deck
          in: body
          required: true
          description: Cabin Object
          schema:
            $ref: '#/definitions/DeckInput'
      responses:
        '200':
          description: ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a cabin with the given code
      operationId: deleteCabin
      parameters:
        - name: code
          in: path
          description: The code of the cabin to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /meeting_points:
    post:
      summary: Creates a new meeting point
      operationId: createMeetingPoint
      parameters:
        - name: meeting_point
          in: body
          required: true
          description: MeetingPoint Object
          schema:
            $ref: '#/definitions/MeetingPointInput'
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all meeting points
      operationId: getAllMeetingPoints
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/MeetingPoint'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /meeting_points/{code}:
    get:
      summary: Returns a cabin with the given code
      operationId: getMeetingPointByCode
      parameters:
        - name: code
          in: path
          description: The code of the meeting point to be returned
          required: true
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/SingleMeetingPoint'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a meeting point with the given code
      operationId: updateCabub
      parameters:
        - name: code
          in: path
          description: The code of the meeting point to be updated
          required: true
          type: string
        - name: meeting_point
          in: body
          required: true
          description: MeetingPoint Object
          schema:
            $ref: '#/definitions/MeetingPointInput'
      responses:
        '200':
          description: ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a meeting point with the given code
      operationId: deleteMeetingPoint
      parameters:
        - name: code
          in: path
          description: The code of the meeting point to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Ok
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  

definitions:
  # Decks
  DeckInput:
    type: object
    properties:
      meeting_schedule:
        type: string
      floor:
        type: integer
      category:
        type: string
      meeting_point_id:
        type: string
  CabinInput:
    type: object
    properties:
      capacity:
        type: integer
      deck_id:
        type: string
      category:
        type: string
      meeting_point_id:
        type: string
  MeetingPointInput:
    type: object
    properties:
      name:
        type: string
  Cabin:
    type: object
    properties:
      capacity:
        type: integer
      deck_id:
        type: string
      category:
        type: string
      meeting_point_id:
        type: string
  MeetingPoint:
    type: object
    properties:
      name:
        type: string
  Deck:
    type: object
    properties:
      meeting_schedule: 
        type: string
      floor:
        type: integer
      category:
        type: string
      meeting_point_id:
        type: string

  DeckList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Deck'
  CabinList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Cabin'
  MeetingPointList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MeetingPoint'
  
          
    
  SingleDeck:
    type: object
    properties:
      data:
        $ref: '#/definitions/Deck'
  SingleCabin:
    type: object
    properties:
      data:
        $ref: '#/definitions/Cabin'
  SingleMeetingPoint:
    type: object
    properties:
      data:
        $ref: '#/definitions/MeetingPoint'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
